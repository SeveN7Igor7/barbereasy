class MessageTemplates {
  
  // Saudação inicial
  static initialGreeting() {
    return `👋 *Bem-vindo ao Sistema de Agendamentos!*

Para continuar, escolha uma das opções:

*1* - 💈 Sou uma Barbearia
*2* - 👤 Sou um Cliente

Digite o número da opção desejada.

---
💈 _Sistema de Agendamentos_`;
  }

  // Confirmação de login para barbearia
  static confirmBarbeariaLogin(phoneNumber) {
    return `💈 *LOGIN COMO BARBEARIA*

Por favor, confirme se este é o número de telefone da sua barbearia:

📱 *Número:* ${phoneNumber}

*1* - ✅ Sim, este é o número da minha barbearia
*2* - ❌ Não, este não é o número correto

Digite o número da opção.`;
  }

  // Confirmação de login para cliente
  static confirmClienteLogin(phoneNumber) {
    return `👤 *LOGIN COMO CLIENTE*

Por favor, confirme se este é o seu número de telefone:

📱 *Número:* ${phoneNumber}

*1* - ✅ Sim, este é o meu número
*2* - ❌ Não, este não é o meu número

Digite o número da opção.`;
  }

  // Mensagem de sucesso de login para barbearia
  static barbeariaLoginSuccess(barbeariaName) {
    return `✅ *LOGIN REALIZADO COM SUCESSO!*

Bem-vinda, *${barbeariaName}*! 💈

${this.barbeariaMenu(barbeariaName)}`;
  }

  // Mensagem de barbearia não encontrada
  static barbeariaNotFound(phoneNumber) {
    return `❌ *BARBEARIA NÃO ENCONTRADA*

Não encontramos uma barbearia cadastrada com este número de telefone.

📞 *Número verificado:* ${phoneNumber}

💡 *Possíveis soluções:*
• Verifique se o número está correto
• Entre em contato com o suporte
• Cadastre sua barbearia no sistema

---
💈 _Sistema de Agendamentos_`;
  }

  // Mensagem de sucesso de login para cliente
  static clienteLoginSuccess(clienteName) {
    return `✅ *LOGIN REALIZADO COM SUCESSO!*

Olá, *${clienteName}*! 👋

${this.clienteMenu(clienteName)}`;
  }

  // Mensagem de cliente não encontrado
  static clienteNotFound(phoneNumber) {
    return `❌ *CLIENTE NÃO ENCONTRADO*

Não encontramos um cliente cadastrado com este número de telefone.

📞 *Número verificado:* ${phoneNumber}

💡 *Para se cadastrar:*
• Faça um agendamento através do nosso site
• Entre em contato com uma de nossas barbearias
• O cadastro será feito automaticamente

---
👤 _Sistema de Agendamentos_`;
  }

  // Mensagem de número incorreto
  static incorrectNumber() {
    return `📱 *NÚMERO INCORRETO*

Por favor, entre em contato usando o número de telefone correto cadastrado no sistema.

💡 *Dica:* O número deve estar exatamente como foi cadastrado.

---
_Sistema de Agendamentos_`;
  }

  // Menu principal da barbearia
  static barbeariaMenu(barbeariaName) {
    return `📋 *MENU PRINCIPAL - ${barbeariaName}*

Selecione uma opção:

*1* - 🗓️ Agendamentos de Hoje
*2* - 🗓️ Agendamentos Pendentes
*3* - 🗓️ Agendamentos de Amanhã
*4* - 🗓️ Agendamentos da Semana
*5* - ❌ Cancelar Agendamento
*6* - 📊 Resumo da Barbearia
*7* - 👥 Lista de Barbeiros
*8* - ✂️ Lista de Serviços

*0* - Sair/Reiniciar

---
💈 *${barbeariaName}*
_Sistema de Gestão WhatsApp_`;
  }

  // Menu principal do cliente
  static clienteMenu(clienteName) {
    return `📋 *MENU PRINCIPAL - Olá ${clienteName}*! 👋

Selecione uma opção:

*1* - 📅 Meus Agendamentos
*2* - 🗓️ Próximo Agendamento
*3* - 📝 Histórico de Atendimentos
*4* - ✂️ Serviços Disponíveis
*5* - 💈 Nossos Barbeiros

*0* - Sair/Reiniciar

---
💈 _Sistema de Agendamentos_`;
  }

  // Mensagem de opção inválida
  static invalidOption(userName) {
    return `❌ Opção inválida. Por favor, digite um número válido do menu.

Digite *0* para voltar ao menu anterior ou reiniciar.

---
Olá *${userName}*! 👋`;
  }

  // Template para agendamentos pendentes (com opção de cancelar)
  static agendamentosPendentes(agendamentos) {
    if (agendamentos.length === 0) {
      return `📅 *AGENDAMENTOS PENDENTES*

✅ Nenhum agendamento pendente!

*0* - Voltar ao Menu Principal

---
_Sistema de Agendamentos_ 📆`;
    }

    let message = `📅 *AGENDAMENTOS PENDENTES*\n\n`;
    message += `📊 *Total: ${agendamentos.length} agendamento(s)*\n\n`;

    agendamentos.forEach((agendamento, index) => {
      const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
      const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
        hour: "2-digit", 
        minute: "2-digit" 
      });
      
      message += `${index + 1}. 📅 *${date}* às *${time}*\n`;
      message += `   👤 ${agendamento.cliente.nome}\n`;
      message += `   💈 ${agendamento.barbeiro.nome}\n`;
      message += `   ✂️ ${agendamento.nomeServico}\n`;
      message += `   💰 R$ ${agendamento.precoServico.toFixed(2).replace(".", ",")}\n`;
      message += `   📱 ${agendamento.cliente.telefone}\n\n`;
    });

    message += `💡 *Para cancelar um agendamento, digite:* 1\n`;
    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n_Sistema de Agendamentos_ 📆`;
    return message;
  }

  // Template para listar agendamentos para cancelar
  static listAgendamentosParaCancelar(agendamentos, barbeariaName) {
    let message = `❌ *CANCELAR AGENDAMENTO - ${barbeariaName}*\n\n`;
    message += `📋 *Selecione o agendamento para cancelar:*

`;

    agendamentos.forEach((agendamento, index) => {
      const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
      const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
        hour: "2-digit", 
        minute: "2-digit" 
      });
      
      message += `*${index + 1}* - 📅 ${date} às ${time}\n`;
      message += `     👤 ${agendamento.cliente.nome}\n`;
      message += `     💈 ${agendamento.barbeiro.nome}\n`;
      message += `     ✂️ ${agendamento.nomeServico}\n\n`;
    });

    message += `💡 *Digite o número do agendamento que deseja cancelar.*\n`;
    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n💈 *${barbeariaName}*`;
    return message;
  }

  // Mensagem de confirmação de cancelamento para barbearia
  static barbeariaCancelConfirmation(agendamento, barbeariaName) {
    const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
    const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
      hour: "2-digit", 
      minute: "2-digit" 
    });
    return `✅ *AGENDAMENTO CANCELADO*

O agendamento foi cancelado com sucesso:

👤 *Cliente:* ${agendamento.cliente.nome}
📅 *Data:* ${date}
⏰ *Horário:* ${time}
✂️ *Serviço:* ${agendamento.nomeServico}

📱 *O cliente foi notificado sobre o cancelamento.*

---
💈 *${barbeariaName}*`;
  }

  // Mensagem de agendamento cancelado para o cliente
  static clientAppointmentCanceled(agendamento) {
    const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
    const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
      hour: "2-digit", 
      minute: "2-digit" 
    });
    return `❌ *AGENDAMENTO CANCELADO*

Olá *${agendamento.cliente.nome}*! 

Informamos que seu agendamento foi cancelado:

📅 *Data:* ${date}
⏰ *Horário:* ${time}
✂️ *Serviço:* ${agendamento.nomeServico}
💈 *Barbeiro:* ${agendamento.barbeiro.nome}

📞 *Motivo:* Cancelado pela barbearia

💡 *Para reagendar:*
Entre em contato conosco ou acesse nossa plataforma online.

Pedimos desculpas pelo inconveniente.

---
💈 _Sistema de Agendamentos_`;
  }

  // Mensagem quando não há agendamentos para cancelar
  static noAppointmentsToCancel() {
    return `📅 *CANCELAR AGENDAMENTO*

✅ Não há agendamentos pendentes para cancelar.

*0* - Voltar ao Menu Principal

---
_Sistema de Agendamentos_`;
  }

  // Template para agendamentos de hoje
  static agendamentosHoje(agendamentos) {
    if (agendamentos.length === 0) {
      return `📅 *AGENDAMENTOS DE HOJE*

✅ Nenhum agendamento para hoje!

Aproveite para organizar a barbearia ou descansar! 😊

*0* - Voltar ao Menu Principal

---
_${new Date().toLocaleDateString("pt-BR")}_ 📆`;
    }

    let message = `📅 *AGENDAMENTOS DE HOJE*\n\n`;
    message += `📊 *Total: ${agendamentos.length} agendamento(s)*\n\n`;

    agendamentos.forEach((agendamento, index) => {
      const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
        hour: "2-digit", 
        minute: "2-digit" 
      });
      
      message += `${index + 1}. ⏰ *${time}*\n`;
      message += `   👤 ${agendamento.cliente.nome}\n`;
      message += `   💈 ${agendamento.barbeiro.nome}\n`;
      message += `   ✂️ ${agendamento.nomeServico}\n`;
      message += `   💰 R$ ${agendamento.precoServico.toFixed(2).replace(".", ",")}\n`;
      message += `   📱 ${agendamento.cliente.telefone}\n\n`;
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n_${new Date().toLocaleDateString("pt-BR")}_ 📆`;
    return message;
  }

  // Template para agendamentos de amanhã
  static agendamentosAmanha(agendamentos) {
    const amanha = new Date();
    amanha.setDate(amanha.getDate() + 1);
    
    if (agendamentos.length === 0) {
      return `📅 *AGENDAMENTOS DE AMANHÃ*

✅ Nenhum agendamento para amanhã!

*0* - Voltar ao Menu Principal

---
_${amanha.toLocaleDateString("pt-BR")}_ 📆`;
    }

    let message = `📅 *AGENDAMENTOS DE AMANHÃ*\n\n`;
    message += `📊 *Total: ${agendamentos.length} agendamento(s)*\n\n`;

    agendamentos.forEach((agendamento, index) => {
      const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
        hour: "2-digit", 
        minute: "2-digit" 
      });
      
      message += `${index + 1}. ⏰ *${time}*\n`;
      message += `   👤 ${agendamento.cliente.nome}\n`;
      message += `   💈 ${agendamento.barbeiro.nome}\n`;
      message += `   ✂️ ${agendamento.nomeServico}\n`;
      message += `   💰 R$ ${agendamento.precoServico.toFixed(2).replace(".", ",")}\n`;
      message += `   📱 ${agendamento.cliente.telefone}\n\n`;
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n_${amanha.toLocaleDateString("pt-BR")}_ 📆`;
    return message;
  }

  // Template para agendamentos da semana
  static agendamentosSemana(agendamentos) {
    if (agendamentos.length === 0) {
      return `📅 *AGENDAMENTOS DA SEMANA*

✅ Nenhum agendamento para os próximos 7 dias!

*0* - Voltar ao Menu Principal

---
_Próximos 7 dias_ 📆`;
    }

    let message = `📅 *AGENDAMENTOS DA SEMANA*\n\n`;
    message += `📊 *Total: ${agendamentos.length} agendamento(s)*\n\n`;

    // Agrupar por dia
    const agendamentosPorDia = {};
    agendamentos.forEach(agendamento => {
      const data = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
      if (!agendamentosPorDia[data]) {
        agendamentosPorDia[data] = [];
      }
      agendamentosPorDia[data].push(agendamento);
    });

    Object.keys(agendamentosPorDia).forEach(data => {
      message += `📅 *${data}*\n`;
      agendamentosPorDia[data].forEach(agendamento => {
        const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
          hour: "2-digit", 
          minute: "2-digit" 
        });
        message += `   ⏰ ${time} - ${agendamento.cliente.nome} (${agendamento.barbeiro.nome})\n`;
      });
      message += "\n";
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n_Próximos 7 dias_ 📆`;
    return message;
  }

  // Template para resumo da barbearia
  static resumoBarbearia(resumo, barbeariaName) {
    return `📊 *RESUMO - ${barbeariaName}*

📅 *HOJE:*
• ${resumo.agendamentosHoje} agendamento(s)

👥 *EQUIPE:*
• ${resumo.totalBarbeiros} barbeiro(s) ativo(s)

✂️ *SERVIÇOS:*
• ${resumo.totalServicos} serviço(s) disponível(is)

👤 *CLIENTES:*
• ${resumo.totalClientes} cliente(s) cadastrado(s)

*0* - Voltar ao Menu Principal

---
_Atualizado em ${new Date().toLocaleString("pt-BR")}_ 🕐`;
  }

  // Template para lista de barbeiros
  static listaBarbeiros(barbeiros) {
    if (barbeiros.length === 0) {
      return `👥 *EQUIPE DE BARBEIROS*

⚠️ Nenhum barbeiro ativo cadastrado.

*0* - Voltar ao Menu Principal

---
_Sistema de Gestão_`;
    }

    let message = `👥 *EQUIPE DE BARBEIROS*\n\n`;
    message += `📊 *Total: ${barbeiros.length} barbeiro(s)*\n\n`;

    barbeiros.forEach((barbeiro, index) => {
      message += `${index + 1}. 💈 *${barbeiro.nome}*\n`;
      if (barbeiro.especialidade) {
        message += `   🎯 ${barbeiro.especialidade}\n`;
      }
      message += `   ✅ Ativo\n\n`;
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n_Sistema de Gestão_ 👥`;
    return message;
  }

  // Template para lista de serviços
  static listaServicos(servicos) {
    if (servicos.length === 0) {
      return `✂️ *SERVIÇOS DISPONÍVEIS*

⚠️ Nenhum serviço cadastrado.

*0* - Voltar ao Menu Principal

---
_Sistema de Gestão_`;
    }

    let message = `✂️ *SERVIÇOS DISPONÍVEIS*\n\n`;
    message += `📊 *Total: ${servicos.length} serviço(s)*\n\n`;

    servicos.forEach((servico, index) => {
      message += `${index + 1}. ✂️ *${servico.nome}*\n`;
      message += `   ⏱️ ${servico.duracaoMin} minutos\n`;
      message += `   💰 R$ ${servico.preco.toFixed(2).replace(".", ",")}\n\n`;
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n_Sistema de Gestão_ ✂️`;
    return message;
  }

  // Template para agendamentos do cliente
  static agendamentosCliente(agendamentos, clienteName) {
    if (agendamentos.length === 0) {
      return `📅 *SEUS AGENDAMENTOS*

Olá *${clienteName}*! 👋

✅ Você não possui agendamentos futuros.

💡 *Que tal agendar um horário?*
Entre em contato conosco para marcar seu próximo atendimento!

*0* - Voltar ao Menu Principal

---
💈 _Sistema de Agendamentos_`;
    }

    let message = `📅 *SEUS AGENDAMENTOS*\n\n`;
    message += `Olá *${clienteName}*! 👋\n\n`;
    message += `📊 *Próximos ${agendamentos.length} agendamento(s):*\n\n`;

    agendamentos.forEach((agendamento, index) => {
      const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
      const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
        hour: "2-digit", 
        minute: "2-digit" 
      });
      
      message += `${index + 1}. 📅 *${date}* às *${time}*\n`;
      message += `   ✂️ ${agendamento.nomeServico}\n`;
      message += `   💈 ${agendamento.barbeiro.nome}\n`;
      message += `   🏪 ${agendamento.barbearia.nome}\n`;
      message += `   💰 R$ ${agendamento.precoServico.toFixed(2).replace(".", ",")}\n`;
      message += `   📋 ${agendamento.status.replace("_", " ")}\n\n`;
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n💈 _Sistema de Agendamentos_`;
    return message;
  }

  // Template para próximo agendamento
  static proximoAgendamento(agendamento, clienteName) {
    if (!agendamento) {
      return `📅 *PRÓXIMO AGENDAMENTO*

Olá *${clienteName}*! 👋

✅ Você não possui agendamentos futuros.

💡 *Que tal agendar um horário?*
Entre em contato conosco para marcar seu próximo atendimento!

*0* - Voltar ao Menu Principal

---
💈 _Sistema de Agendamentos_`;
    }

    const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
    const time = new Date(agendamento.dataHora).toLocaleTimeString("pt-BR", { 
      hour: "2-digit", 
      minute: "2-digit" 
    });

    return `📅 *SEU PRÓXIMO AGENDAMENTO*

Olá *${clienteName}*! 👋

🗓️ *Data:* ${date}
⏰ *Horário:* ${time}
✂️ *Serviço:* ${agendamento.nomeServico}
💈 *Barbeiro:* ${agendamento.barbeiro.nome}
🏪 *Local:* ${agendamento.barbearia.nome}
💰 *Valor:* R$ ${agendamento.precoServico.toFixed(2).replace(".", ",")}
📋 *Status:* ${agendamento.status.replace("_", " ")}

⏰ *Lembrete:*
Chegue com 10 minutos de antecedência!

*0* - Voltar ao Menu Principal

---
💈 _Sistema de Agendamentos_`;
  }

  // Template para histórico do cliente
  static historicoCliente(historico, clienteName) {
    if (historico.length === 0) {
      return `📋 *SEU HISTÓRICO*

Olá *${clienteName}*! 👋

📝 Você ainda não possui histórico de atendimentos.

💡 *Primeira vez?*
Seja bem-vindo(a)! Estamos ansiosos para atendê-lo(a)!

*0* - Voltar ao Menu Principal

---
💈 _Sistema de Agendamentos_`;
    }

    let message = `📋 *SEU HISTÓRICO*\n\n`;
    message += `Olá *${clienteName}*! 👋\n\n`;
    message += `📊 *Últimos ${historico.length} atendimento(s):*\n\n`;

    historico.forEach((agendamento, index) => {
      const date = new Date(agendamento.dataHora).toLocaleDateString("pt-BR");
      
      message += `${index + 1}. 📅 *${date}*\n`;
      message += `   ✂️ ${agendamento.nomeServico}\n`;
      message += `   💈 ${agendamento.barbeiro.nome}\n`;
      message += `   🏪 ${agendamento.barbearia.nome}\n`;
      message += `   💰 R$ ${agendamento.precoServico.toFixed(2).replace(".", ",")}\n\n`;
    });

    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n💈 _Sistema de Agendamentos_`;
    return message;
  }

  // Template para serviços (visão do cliente)
  static servicosParaCliente(servicos, barbeariaName) {
    if (servicos.length === 0) {
      return `✂️ *NOSSOS SERVIÇOS*

⚠️ Nenhum serviço disponível no momento.

Entre em contato para mais informações!

*0* - Voltar ao Menu Principal

---
💈 *${barbeariaName}*`;
    }

    let message = `✂️ *NOSSOS SERVIÇOS*\n\n`;

    servicos.forEach((servico, index) => {
      message += `${index + 1}. ✂️ *${servico.nome}*\n`;
      message += `   ⏱️ ${servico.duracaoMin} minutos\n`;
      message += `   💰 R$ ${servico.preco.toFixed(2).replace(".", ",")}\n\n`;
    });

    message += `💡 *Para agendar:*\nEntre em contato conosco!\n\n`;
    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n💈 *${barbeariaName}*`;
    return message;
  }

  // Template para barbeiros (visão do cliente)
  static barbeirosParaCliente(barbeiros, barbeariaName) {
    if (barbeiros.length === 0) {
      return `👥 *NOSSA EQUIPE*

⚠️ Nenhum barbeiro disponível no momento.

*0* - Voltar ao Menu Principal

---
💈 *${barbeariaName}*`;
    }

    let message = `👥 *NOSSA EQUIPE*\n\n`;

    barbeiros.forEach((barbeiro, index) => {
      message += `${index + 1}. 💈 *${barbeiro.nome}*\n`;
      if (barbeiro.especialidade) {
        message += `   🎯 ${barbeiro.especialidade}\n`;
      }
      message += `   ✅ Disponível\n\n`;
    });

    message += `💡 *Para agendar:*\nEscolha seu barbeiro preferido e entre em contato!\n\n`;
    message += `*0* - Voltar ao Menu Principal\n\n`;
    message += `---\n💈 *${barbeariaName}*`;
    return message;
  }
}

module.exports = MessageTemplates;


  // Template para confirmação de agendamento para o cliente
  static clientAppointmentConfirmed(clienteName, barbeariaName, serviceName, servicePrice, dateTime, barbeiroName) {
    const date = new Date(dateTime).toLocaleDateString("pt-BR");
    const time = new Date(dateTime).toLocaleTimeString("pt-BR", { 
      hour: "2-digit", 
      minute: "2-digit" 
    });

    return `✅ *AGENDAMENTO CONFIRMADO*

Olá *${clienteName}*! 👋

Seu agendamento foi confirmado com sucesso:

🏪 *Barbearia:* ${barbeariaName}
📅 *Data:* ${date}
⏰ *Horário:* ${time}
✂️ *Serviço:* ${serviceName}
💈 *Barbeiro:* ${barbeiroName}
💰 *Valor:* R$ ${servicePrice.toFixed(2).replace(".", ",")}

📍 *Lembrete importante:*
• Chegue com 10 minutos de antecedência
• Traga um documento com foto
• Em caso de imprevisto, entre em contato

Obrigado por escolher nossos serviços! 😊

---
💈 _${barbeariaName}_`;
  }

  // Template para notificação de novo agendamento para a barbearia
  static barbeariaNewAppointment(clienteName, clientePhone, serviceName, servicePrice, dateTime, barbeiroName) {
    const date = new Date(dateTime).toLocaleDateString("pt-BR");
    const time = new Date(dateTime).toLocaleTimeString("pt-BR", { 
      hour: "2-digit", 
      minute: "2-digit" 
    });

    return `🔔 *NOVO AGENDAMENTO*

Um novo agendamento foi realizado:

👤 *Cliente:* ${clienteName}
📱 *Telefone:* ${clientePhone}
📅 *Data:* ${date}
⏰ *Horário:* ${time}
✂️ *Serviço:* ${serviceName}
💈 *Barbeiro:* ${barbeiroName}
💰 *Valor:* R$ ${servicePrice.toFixed(2).replace(".", ",")}

📋 *Status:* Agendamento Confirmado

💡 *O cliente foi notificado por WhatsApp*

---
💈 _Sistema de Agendamentos_`;
  }

}

module.exports = MessageTemplates;
